{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for cars service.",
        "title": "Cars service Swagger API",
        "contact": {
            "email": "dponomarov25@gmail.com"
        },
        "version": "1.0"
    },
    "basePath": "/api/",
    "paths": {
        "/car": {
            "get": {
                "description": "Get car by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Get car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.HalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Failure"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.Fatal"
                        }
                    },
                    "500": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.Fatal"
                        }
                    }
                }
            },
            "post": {
                "description": "Create car with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Create car",
                "parameters": [
                    {
                        "description": "Request for create car",
                        "name": "post_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/service.HalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Fatal"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/handlers.Failure"
                        }
                    },
                    "500": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.Fatal"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Car": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "created": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "handlers.Failure": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handlers.Fatal": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "service.Embedded": {
            "type": "object"
        },
        "service.HalResponse": {
            "type": "object",
            "properties": {
                "_embedded": {
                    "$ref": "#/definitions/service.Embedded"
                },
                "_links": {
                    "$ref": "#/definitions/service.SelfURL"
                },
                "_status": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/definitions/database.Car"
                }
            }
        },
        "service.PostRequest": {
            "type": "object",
            "required": [
                "brand",
                "model"
            ],
            "properties": {
                "brand": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                }
            }
        },
        "service.SelfURL": {
            "type": "object"
        }
    }
}